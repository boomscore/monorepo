import { MigrationInterface, QueryRunner } from "typeorm";

export class AlignSchemaWithEntities1759537354192 implements MigrationInterface {
    name = 'AlignSchemaWithEntities1759537354192'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "sessions" DROP CONSTRAINT "FK_sessions_deviceId"`);
        await queryRunner.query(`ALTER TABLE "sessions" DROP CONSTRAINT "FK_sessions_userId"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP CONSTRAINT "FK_devices_userId"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" DROP CONSTRAINT "FK_refresh_tokens_userId"`);
        await queryRunner.query(`ALTER TABLE "seasons" DROP CONSTRAINT "FK_seasons_leagueId"`);
        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "FK_teams_leagueId"`);
        await queryRunner.query(`ALTER TABLE "leagues" DROP CONSTRAINT "FK_leagues_sportId"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP CONSTRAINT "FK_match_events_teamId"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP CONSTRAINT "FK_match_events_matchId"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_matches_awayTeamId"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_matches_homeTeamId"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_matches_seasonId"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_matches_leagueId"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP CONSTRAINT "FK_prediction_batches_userId"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP CONSTRAINT "FK_predictions_batchId"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP CONSTRAINT "FK_predictions_matchId"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP CONSTRAINT "FK_predictions_userId"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP CONSTRAINT "FK_chat_messages_conversationId"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP CONSTRAINT "FK_conversations_userId"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP CONSTRAINT "FK_payments_subscriptionId"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP CONSTRAINT "FK_payments_userId"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP CONSTRAINT "FK_subscriptions_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_sessions_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_sessions_deviceId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_sessions_expiresAt"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_devices_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_devices_fingerprint"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_refresh_tokens_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_refresh_tokens_expiresAt"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_sports_apiId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_sports_slug"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_seasons_leagueId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_seasons_year"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_teams_apiId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_teams_leagueId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_teams_country"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_leagues_sportId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_leagues_country"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_match_events_matchId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_match_events_teamId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_match_events_type"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_match_events_minute"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_apiId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_leagueId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_seasonId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_homeTeamId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_awayTeamId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_startTime"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_matches_startTime_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_prediction_batches_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_prediction_batches_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_predictions_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_predictions_matchId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_predictions_batchId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_predictions_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_predictions_type"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_chat_messages_conversationId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_chat_messages_role"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_conversations_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_conversations_isActive"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_payments_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_payments_subscriptionId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_payments_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_payments_reference"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_subscriptions_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_subscriptions_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_subscriptions_endDate"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_email"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_username"`);
        await queryRunner.query(`ALTER TABLE "seasons" DROP CONSTRAINT "UQ_seasons_league_year"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP COLUMN "comments"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "totalStake"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "totalPotentialPayout"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "totalActualPayout"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "totalOdds"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "correctPredictions"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "isProcessed"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "processedAt"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "settledAt"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "value"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "potentialPayout"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "actualPayout"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "aiAnalysis"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "settledAt"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "context"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP CONSTRAINT "UQ_payments_reference"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "reference"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "externalReference"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "gatewayResponse"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "refundAmount"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "endDate"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "pausedAt"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "trialEnds"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "nextBillingDate"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "paymentMethodId"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP CONSTRAINT "UQ_subscriptions_externalId"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "externalId"`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD "playerOut" character varying(100)`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD "playerIn" character varying(100)`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD "apiEventId" integer`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "filters" jsonb NOT NULL`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "predictionTypes" jsonb NOT NULL`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "scenario" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "totalMatches" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "processedMatches" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "successfulPredictions" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "failedPredictions" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "averageConfidence" numeric(5,2)`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "startedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "completedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "estimatedCompletionAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "errorMessage" text`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "progress" jsonb`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "summary" jsonb`);
        await queryRunner.query(`CREATE TYPE "public"."predictions_actualoutcome_enum" AS ENUM('HOME_WIN', 'AWAY_WIN', 'DRAW', 'OVER', 'UNDER', 'YES', 'NO', 'ODD', 'EVEN', 'CUSTOM')`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "actualOutcome" "public"."predictions_actualoutcome_enum"`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "potentialWin" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "actualWin" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "scenario" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "details" jsonb`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "contextData" jsonb`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "resolvedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "actualResult" jsonb`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "isCorrect" boolean`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "cost" numeric(10,6)`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "responseTime" integer`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "entities" jsonb`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "intent" jsonb`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "context" jsonb`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "isEdited" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "editedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "originalContent" text`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "description" character varying(1000)`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "systemPrompt" text`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "isPinned" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "tokensUsed" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "estimatedCost" numeric(10,6) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "tags" jsonb`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "summary" jsonb`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "paystackReference" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "payments" ADD CONSTRAINT "UQ_e2c642756a34c2ec569f1b44631" UNIQUE ("paystackReference")`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "fees" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "netAmount" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "description" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "ipAddress" inet`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "userAgent" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "failedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "refundedAmount" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "paystackData" jsonb`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "expiresAt" TIMESTAMP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "trialEndsAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "nextBillingAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "currentPeriodStart" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "currentPeriodEnd" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "paystackSubscriptionId" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "paystackCustomerId" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "paystackPlanId" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "failedPaymentAttempts" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "lastPaymentAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "lastFailedPaymentAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "cancellationReason" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "features" jsonb`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "usage" jsonb`);
        await queryRunner.query(`ALTER TYPE "public"."session_status_enum" RENAME TO "session_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."sessions_status_enum" AS ENUM('ACTIVE', 'EXPIRED', 'REVOKED')`);
        await queryRunner.query(`ALTER TABLE "sessions" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "sessions" ALTER COLUMN "status" TYPE "public"."sessions_status_enum" USING "status"::"text"::"public"."sessions_status_enum"`);
        await queryRunner.query(`ALTER TABLE "sessions" ALTER COLUMN "status" SET DEFAULT 'ACTIVE'`);
        await queryRunner.query(`DROP TYPE "public"."session_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."device_type_enum" RENAME TO "device_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."devices_type_enum" AS ENUM('DESKTOP', 'MOBILE', 'TABLET', 'OTHER')`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "type" TYPE "public"."devices_type_enum" USING "type"::"text"::"public"."devices_type_enum"`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "type" SET DEFAULT 'OTHER'`);
        await queryRunner.query(`DROP TYPE "public"."device_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."device_status_enum" RENAME TO "device_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."devices_status_enum" AS ENUM('TRUSTED', 'UNTRUSTED', 'BLOCKED')`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" TYPE "public"."devices_status_enum" USING "status"::"text"::"public"."devices_status_enum"`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" SET DEFAULT 'UNTRUSTED'`);
        await queryRunner.query(`DROP TYPE "public"."device_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."refresh_token_status_enum" RENAME TO "refresh_token_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."refresh_tokens_status_enum" AS ENUM('ACTIVE', 'USED', 'REVOKED', 'EXPIRED')`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ALTER COLUMN "status" TYPE "public"."refresh_tokens_status_enum" USING "status"::"text"::"public"."refresh_tokens_status_enum"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ALTER COLUMN "status" SET DEFAULT 'ACTIVE'`);
        await queryRunner.query(`DROP TYPE "public"."refresh_token_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."league_type_enum" RENAME TO "league_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."leagues_type_enum" AS ENUM('LEAGUE', 'CUP', 'PLAYOFFS', 'FRIENDLY', 'QUALIFICATION')`);
        await queryRunner.query(`ALTER TABLE "leagues" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "leagues" ALTER COLUMN "type" TYPE "public"."leagues_type_enum" USING "type"::"text"::"public"."leagues_type_enum"`);
        await queryRunner.query(`ALTER TABLE "leagues" ALTER COLUMN "type" SET DEFAULT 'LEAGUE'`);
        await queryRunner.query(`DROP TYPE "public"."league_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."match_event_type_enum" RENAME TO "match_event_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."match_events_type_enum" AS ENUM('GOAL', 'OWN_GOAL', 'PENALTY_GOAL', 'MISSED_PENALTY', 'YELLOW_CARD', 'RED_CARD', 'SUBSTITUTION', 'CORNER', 'FREE_KICK', 'OFFSIDE', 'FOUL', 'INJURY', 'VAR', 'KICKOFF', 'HALFTIME', 'FULLTIME', 'EXTRA_TIME', 'PENALTY_SHOOTOUT')`);
        await queryRunner.query(`ALTER TABLE "match_events" ALTER COLUMN "type" TYPE "public"."match_events_type_enum" USING "type"::"text"::"public"."match_events_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."match_event_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "match_events" ALTER COLUMN "isHome" SET DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP COLUMN "detail"`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD "detail" character varying(50)`);
        await queryRunner.query(`ALTER TYPE "public"."match_status_enum" RENAME TO "match_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."matches_status_enum" AS ENUM('SCHEDULED', 'LIVE', 'HALFTIME', 'FINISHED', 'POSTPONED', 'CANCELLED', 'ABANDONED', 'SUSPENDED')`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "status" TYPE "public"."matches_status_enum" USING "status"::"text"::"public"."matches_status_enum"`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "status" SET DEFAULT 'SCHEDULED'`);
        await queryRunner.query(`DROP TYPE "public"."match_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."match_result_enum" RENAME TO "match_result_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."matches_result_enum" AS ENUM('HOME_WIN', 'AWAY_WIN', 'DRAW', 'PENDING')`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "result" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "result" TYPE "public"."matches_result_enum" USING "result"::"text"::"public"."matches_result_enum"`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "result" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."match_result_enum_old"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "name" character varying(200)`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "description" character varying(1000)`);
        await queryRunner.query(`ALTER TYPE "public"."batch_status_enum" RENAME TO "batch_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."prediction_batches_status_enum" AS ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED')`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ALTER COLUMN "status" TYPE "public"."prediction_batches_status_enum" USING "status"::"text"::"public"."prediction_batches_status_enum"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."batch_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."prediction_type_enum" RENAME TO "prediction_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."predictions_type_enum" AS ENUM('MATCH_WINNER', 'BOTH_TEAMS_SCORE', 'OVER_UNDER', 'HANDICAP', 'CORRECT_SCORE', 'FIRST_GOAL_SCORER', 'TOTAL_GOALS', 'HALF_TIME_RESULT', 'DOUBLE_CHANCE', 'DRAW_NO_BET', 'CLEAN_SHEET', 'WIN_TO_NIL', 'GOALS_ODD_EVEN', 'TEAM_TOTAL_GOALS', 'CORNERS', 'CARDS')`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "type" TYPE "public"."predictions_type_enum" USING "type"::"text"::"public"."predictions_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."prediction_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."prediction_outcome_enum" RENAME TO "prediction_outcome_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."predictions_outcome_enum" AS ENUM('HOME_WIN', 'AWAY_WIN', 'DRAW', 'OVER', 'UNDER', 'YES', 'NO', 'ODD', 'EVEN', 'CUSTOM')`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "outcome" TYPE "public"."predictions_outcome_enum" USING "outcome"::"text"::"public"."predictions_outcome_enum"`);
        await queryRunner.query(`DROP TYPE "public"."prediction_outcome_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."prediction_status_enum" RENAME TO "prediction_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."predictions_status_enum" AS ENUM('PENDING', 'CORRECT', 'INCORRECT', 'FINISHED', 'VOID', 'PUSH')`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "status" TYPE "public"."predictions_status_enum" USING "status"::"text"::"public"."predictions_status_enum"`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."prediction_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "confidence"`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "confidence" numeric(5,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "odds" TYPE numeric(8,5)`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "stake" TYPE numeric(5,2)`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "reasoning"`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "reasoning" character varying(1000)`);
        await queryRunner.query(`ALTER TYPE "public"."chat_message_role_enum" RENAME TO "chat_message_role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."chat_messages_role_enum" AS ENUM('USER', 'ASSISTANT', 'SYSTEM', 'TOOL')`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ALTER COLUMN "role" TYPE "public"."chat_messages_role_enum" USING "role"::"text"::"public"."chat_messages_role_enum"`);
        await queryRunner.query(`DROP TYPE "public"."chat_message_role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "tokens"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "tokens" integer`);
        await queryRunner.query(`ALTER TYPE "public"."payment_status_enum" RENAME TO "payment_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."payments_status_enum" AS ENUM('PENDING', 'SUCCESS', 'FAILED', 'CANCELLED', 'REFUNDED', 'PARTIALLY_REFUNDED')`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "status" TYPE "public"."payments_status_enum" USING "status"::"text"::"public"."payments_status_enum"`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."payment_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."payment_type_enum" RENAME TO "payment_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."payments_type_enum" AS ENUM('SUBSCRIPTION', 'ONE_TIME', 'RENEWAL', 'UPGRADE', 'DOWNGRADE')`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "type" TYPE "public"."payments_type_enum" USING "type"::"text"::"public"."payments_type_enum"`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "type" SET DEFAULT 'SUBSCRIPTION'`);
        await queryRunner.query(`DROP TYPE "public"."payment_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "type" SET DEFAULT 'SUBSCRIPTION'`);
        await queryRunner.query(`ALTER TYPE "public"."payment_method_enum" RENAME TO "payment_method_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."payments_method_enum" AS ENUM('CARD', 'BANK_TRANSFER', 'USSD', 'QR', 'MOBILE_MONEY')`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "method" TYPE "public"."payments_method_enum" USING "method"::"text"::"public"."payments_method_enum"`);
        await queryRunner.query(`DROP TYPE "public"."payment_method_enum_old"`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "method" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "currency"`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "currency" character varying(10) NOT NULL DEFAULT 'NGN'`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD CONSTRAINT "UQ_fbdba4e2ac694cf8c9cecf4dc84" UNIQUE ("userId")`);
        await queryRunner.query(`ALTER TYPE "public"."subscription_plan_enum" RENAME TO "subscription_plan_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."subscriptions_plan_enum" AS ENUM('FREE', 'PRO', 'ULTRA')`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "plan" TYPE "public"."subscriptions_plan_enum" USING "plan"::"text"::"public"."subscriptions_plan_enum"`);
        await queryRunner.query(`DROP TYPE "public"."subscription_plan_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."subscription_status_enum" RENAME TO "subscription_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."subscriptions_status_enum" AS ENUM('ACTIVE', 'CANCELLED', 'EXPIRED', 'SUSPENDED', 'PENDING', 'TRIALING')`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "status" TYPE "public"."subscriptions_status_enum" USING "status"::"text"::"public"."subscriptions_status_enum"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."subscription_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."billing_cycle_enum" RENAME TO "billing_cycle_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."subscriptions_billingcycle_enum" AS ENUM('MONTHLY', 'QUARTERLY', 'YEARLY')`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "billingCycle" TYPE "public"."subscriptions_billingcycle_enum" USING "billingCycle"::"text"::"public"."subscriptions_billingcycle_enum"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "billingCycle" SET DEFAULT 'MONTHLY'`);
        await queryRunner.query(`DROP TYPE "public"."billing_cycle_enum_old"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "billingCycle" SET DEFAULT 'MONTHLY'`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "currency"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "currency" character varying(10) NOT NULL DEFAULT 'NGN'`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum" RENAME TO "user_role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('USER', 'MODERATOR', 'ADMIN')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."users_role_enum" USING "role"::"text"::"public"."users_role_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" SET DEFAULT 'USER'`);
        await queryRunner.query(`DROP TYPE "public"."user_role_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."user_status_enum" RENAME TO "user_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_status_enum" AS ENUM('ACTIVE', 'INACTIVE', 'SUSPENDED', 'BANNED')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "status" TYPE "public"."users_status_enum" USING "status"::"text"::"public"."users_status_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "status" SET DEFAULT 'ACTIVE'`);
        await queryRunner.query(`DROP TYPE "public"."user_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."subscription_plan_enum" RENAME TO "subscription_plan_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_subscriptionplan_enum" AS ENUM('FREE', 'PRO', 'ULTRA')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "subscriptionPlan" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "subscriptionPlan" TYPE "public"."users_subscriptionplan_enum" USING "subscriptionPlan"::"text"::"public"."users_subscriptionplan_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "subscriptionPlan" SET DEFAULT 'FREE'`);
        await queryRunner.query(`DROP TYPE "public"."subscription_plan_enum_old"`);
        await queryRunner.query(`CREATE INDEX "IDX_50762206f116cd47d1c3fec396" ON "sessions" ("expiresAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_e9f62f5dcb8a54b84234c9e7a0" ON "sessions" ("token") `);
        await queryRunner.query(`CREATE INDEX "IDX_fd11aa87698d5a784713b9de97" ON "sessions" ("deviceId") `);
        await queryRunner.query(`CREATE INDEX "IDX_57de40bc620f456c7311aa3a1e" ON "sessions" ("userId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_854ce23dfa9a30aa4ddfc6f78f" ON "devices" ("fingerprint") `);
        await queryRunner.query(`CREATE INDEX "IDX_e8a5d59f0ac3040395f159507c" ON "devices" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_56b91d98f71e3d1b649ed6e9f3" ON "refresh_tokens" ("expiresAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_4542dd2f38a61354a040ba9fd5" ON "refresh_tokens" ("token") `);
        await queryRunner.query(`CREATE INDEX "IDX_610102b60fea1455310ccd299d" ON "refresh_tokens" ("userId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_7469a21a84308f52d4b9d14cdd" ON "sports" ("apiId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_be96c1d313b6d198a17b08f4c6" ON "sports" ("slug") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_b6c0d664ab8e5ad1c0df11641f" ON "seasons" ("leagueId", "year") `);
        await queryRunner.query(`CREATE INDEX "IDX_e20814074bbf37638cb4affa08" ON "seasons" ("year") `);
        await queryRunner.query(`CREATE INDEX "IDX_a7cb1734e4ef424bf9422b1c0d" ON "seasons" ("leagueId") `);
        await queryRunner.query(`CREATE INDEX "IDX_960b513ff2e8bc3228b7d90884" ON "teams" ("country") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_1000526725818dc4f1fa10c05c" ON "teams" ("apiId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_de8536da4945fe980f4a61900d" ON "teams" ("slug") `);
        await queryRunner.query(`CREATE INDEX "IDX_a2e8bdf2708d44fab55ee1ff75" ON "teams" ("leagueId") `);
        await queryRunner.query(`CREATE INDEX "IDX_c3cb6ffa564432e025b182a435" ON "leagues" ("country") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_f7ed4419710e27e9b7820e4096" ON "leagues" ("apiId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_f4c22a253137e82ec78850e9b7" ON "leagues" ("slug") `);
        await queryRunner.query(`CREATE INDEX "IDX_d535cd077840bb3299757f3475" ON "leagues" ("sportId") `);
        await queryRunner.query(`CREATE INDEX "IDX_59d2cbbbc49f74532e1a7e2eaa" ON "match_events" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_976dc51b390a33ce8c67d5cd7b" ON "match_events" ("minute") `);
        await queryRunner.query(`CREATE INDEX "IDX_c2da359d459a1dcfab2d195153" ON "match_events" ("teamId") `);
        await queryRunner.query(`CREATE INDEX "IDX_272a2f96fa5c7d89b8c362af05" ON "match_events" ("matchId") `);
        await queryRunner.query(`CREATE INDEX "IDX_cb1d5fb10c9a7398b475fd6961" ON "matches" ("startTime", "status") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_c678ea60dd389dbfeaaf8c778c" ON "matches" ("apiId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a182c2c9602fbab4e0cf680090" ON "matches" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_c8b2066966d4c910666964e0a9" ON "matches" ("startTime") `);
        await queryRunner.query(`CREATE INDEX "IDX_c5505de389fa5fca7ddce29fa4" ON "matches" ("awayTeamId") `);
        await queryRunner.query(`CREATE INDEX "IDX_999a74ecaebaf96816112445a0" ON "matches" ("homeTeamId") `);
        await queryRunner.query(`CREATE INDEX "IDX_107b8f72bdc17c14b57d5f469d" ON "matches" ("seasonId") `);
        await queryRunner.query(`CREATE INDEX "IDX_75354d5380a23b1b9c1427fbce" ON "matches" ("leagueId") `);
        await queryRunner.query(`CREATE INDEX "IDX_7bc46be013a39010c5c8ca320c" ON "prediction_batches" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_60011f740cea98d5cb0973cd8c" ON "prediction_batches" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_268a13fe8fba2e853cdb6c4f11" ON "prediction_batches" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2c00b14b6320662bf17aee67fc" ON "predictions" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_8f57c46159d1baa78a293f4192" ON "predictions" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_dee818d9c88fef0ddd2c9fc9d5" ON "predictions" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_6a9655d032a58c32f5fd5a88e4" ON "predictions" ("batchId") `);
        await queryRunner.query(`CREATE INDEX "IDX_3458aa50ebcc2f3df1d720161a" ON "predictions" ("matchId") `);
        await queryRunner.query(`CREATE INDEX "IDX_cd3302a5d7d146da1e001ace2b" ON "predictions" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a6f359922fb93e42d1b2daf38d" ON "chat_messages" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_47d59674564749030c4729d77c" ON "chat_messages" ("role") `);
        await queryRunner.query(`CREATE INDEX "IDX_45745953065384cc9c4264c2a3" ON "chat_messages" ("conversationId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ae0652398784e0276bf69e5bdd" ON "conversations" ("updatedAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_98e7c5d5a223e5c7451459e7dc" ON "conversations" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_a9b3b5d51da1c75242055338b5" ON "conversations" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_8277a466232344577740a61344" ON "payments" ("createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_e2c642756a34c2ec569f1b4463" ON "payments" ("paystackReference") `);
        await queryRunner.query(`CREATE INDEX "IDX_32b41cdb985a296213e9a928b5" ON "payments" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_2017d0cbfdbfec6b1b388e6aa0" ON "payments" ("subscriptionId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_523af772747ee6f53767e88e93" ON "subscriptions" ("paystackSubscriptionId") `);
        await queryRunner.query(`CREATE INDEX "IDX_952eabdfeff473584fb7491f98" ON "subscriptions" ("expiresAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_95d52cafe172d597df468e507a" ON "subscriptions" ("plan") `);
        await queryRunner.query(`CREATE INDEX "IDX_6ccf973355b70645eff37774de" ON "subscriptions" ("status") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_fbdba4e2ac694cf8c9cecf4dc8" ON "subscriptions" ("userId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_fe0bb3f6520ee0469504521e71" ON "users" ("username") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_97672ac88f789774dd47f7c8be" ON "users" ("email") `);
        await queryRunner.query(`ALTER TABLE "sessions" ADD CONSTRAINT "FK_57de40bc620f456c7311aa3a1e6" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sessions" ADD CONSTRAINT "FK_fd11aa87698d5a784713b9de978" FOREIGN KEY ("deviceId") REFERENCES "devices"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "devices" ADD CONSTRAINT "FK_e8a5d59f0ac3040395f159507c6" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ADD CONSTRAINT "FK_610102b60fea1455310ccd299de" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "seasons" ADD CONSTRAINT "FK_a7cb1734e4ef424bf9422b1c0df" FOREIGN KEY ("leagueId") REFERENCES "leagues"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "FK_a2e8bdf2708d44fab55ee1ff751" FOREIGN KEY ("leagueId") REFERENCES "leagues"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "leagues" ADD CONSTRAINT "FK_d535cd077840bb3299757f34755" FOREIGN KEY ("sportId") REFERENCES "sports"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD CONSTRAINT "FK_272a2f96fa5c7d89b8c362af058" FOREIGN KEY ("matchId") REFERENCES "matches"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD CONSTRAINT "FK_c2da359d459a1dcfab2d1951532" FOREIGN KEY ("teamId") REFERENCES "teams"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_75354d5380a23b1b9c1427fbce1" FOREIGN KEY ("leagueId") REFERENCES "leagues"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_107b8f72bdc17c14b57d5f469d1" FOREIGN KEY ("seasonId") REFERENCES "seasons"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_999a74ecaebaf96816112445a09" FOREIGN KEY ("homeTeamId") REFERENCES "teams"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_c5505de389fa5fca7ddce29fa49" FOREIGN KEY ("awayTeamId") REFERENCES "teams"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD CONSTRAINT "FK_268a13fe8fba2e853cdb6c4f11c" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD CONSTRAINT "FK_cd3302a5d7d146da1e001ace2bd" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD CONSTRAINT "FK_3458aa50ebcc2f3df1d720161a3" FOREIGN KEY ("matchId") REFERENCES "matches"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD CONSTRAINT "FK_6a9655d032a58c32f5fd5a88e4d" FOREIGN KEY ("batchId") REFERENCES "prediction_batches"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD CONSTRAINT "FK_45745953065384cc9c4264c2a3d" FOREIGN KEY ("conversationId") REFERENCES "conversations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD CONSTRAINT "FK_a9b3b5d51da1c75242055338b59" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payments" ADD CONSTRAINT "FK_2017d0cbfdbfec6b1b388e6aa08" FOREIGN KEY ("subscriptionId") REFERENCES "subscriptions"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD CONSTRAINT "FK_fbdba4e2ac694cf8c9cecf4dc84" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP CONSTRAINT "FK_fbdba4e2ac694cf8c9cecf4dc84"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP CONSTRAINT "FK_2017d0cbfdbfec6b1b388e6aa08"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP CONSTRAINT "FK_a9b3b5d51da1c75242055338b59"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP CONSTRAINT "FK_45745953065384cc9c4264c2a3d"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP CONSTRAINT "FK_6a9655d032a58c32f5fd5a88e4d"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP CONSTRAINT "FK_3458aa50ebcc2f3df1d720161a3"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP CONSTRAINT "FK_cd3302a5d7d146da1e001ace2bd"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP CONSTRAINT "FK_268a13fe8fba2e853cdb6c4f11c"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_c5505de389fa5fca7ddce29fa49"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_999a74ecaebaf96816112445a09"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_107b8f72bdc17c14b57d5f469d1"`);
        await queryRunner.query(`ALTER TABLE "matches" DROP CONSTRAINT "FK_75354d5380a23b1b9c1427fbce1"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP CONSTRAINT "FK_c2da359d459a1dcfab2d1951532"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP CONSTRAINT "FK_272a2f96fa5c7d89b8c362af058"`);
        await queryRunner.query(`ALTER TABLE "leagues" DROP CONSTRAINT "FK_d535cd077840bb3299757f34755"`);
        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "FK_a2e8bdf2708d44fab55ee1ff751"`);
        await queryRunner.query(`ALTER TABLE "seasons" DROP CONSTRAINT "FK_a7cb1734e4ef424bf9422b1c0df"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" DROP CONSTRAINT "FK_610102b60fea1455310ccd299de"`);
        await queryRunner.query(`ALTER TABLE "devices" DROP CONSTRAINT "FK_e8a5d59f0ac3040395f159507c6"`);
        await queryRunner.query(`ALTER TABLE "sessions" DROP CONSTRAINT "FK_fd11aa87698d5a784713b9de978"`);
        await queryRunner.query(`ALTER TABLE "sessions" DROP CONSTRAINT "FK_57de40bc620f456c7311aa3a1e6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_97672ac88f789774dd47f7c8be"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fe0bb3f6520ee0469504521e71"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fbdba4e2ac694cf8c9cecf4dc8"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_6ccf973355b70645eff37774de"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_95d52cafe172d597df468e507a"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_952eabdfeff473584fb7491f98"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_523af772747ee6f53767e88e93"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2017d0cbfdbfec6b1b388e6aa0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_32b41cdb985a296213e9a928b5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e2c642756a34c2ec569f1b4463"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8277a466232344577740a61344"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a9b3b5d51da1c75242055338b5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_98e7c5d5a223e5c7451459e7dc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ae0652398784e0276bf69e5bdd"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_45745953065384cc9c4264c2a3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_47d59674564749030c4729d77c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a6f359922fb93e42d1b2daf38d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cd3302a5d7d146da1e001ace2b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3458aa50ebcc2f3df1d720161a"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_6a9655d032a58c32f5fd5a88e4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_dee818d9c88fef0ddd2c9fc9d5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8f57c46159d1baa78a293f4192"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2c00b14b6320662bf17aee67fc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_268a13fe8fba2e853cdb6c4f11"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_60011f740cea98d5cb0973cd8c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7bc46be013a39010c5c8ca320c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_75354d5380a23b1b9c1427fbce"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_107b8f72bdc17c14b57d5f469d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_999a74ecaebaf96816112445a0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c5505de389fa5fca7ddce29fa4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c8b2066966d4c910666964e0a9"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a182c2c9602fbab4e0cf680090"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c678ea60dd389dbfeaaf8c778c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cb1d5fb10c9a7398b475fd6961"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_272a2f96fa5c7d89b8c362af05"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c2da359d459a1dcfab2d195153"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_976dc51b390a33ce8c67d5cd7b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_59d2cbbbc49f74532e1a7e2eaa"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d535cd077840bb3299757f3475"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f4c22a253137e82ec78850e9b7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f7ed4419710e27e9b7820e4096"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c3cb6ffa564432e025b182a435"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a2e8bdf2708d44fab55ee1ff75"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_de8536da4945fe980f4a61900d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1000526725818dc4f1fa10c05c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_960b513ff2e8bc3228b7d90884"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a7cb1734e4ef424bf9422b1c0d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e20814074bbf37638cb4affa08"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b6c0d664ab8e5ad1c0df11641f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_be96c1d313b6d198a17b08f4c6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7469a21a84308f52d4b9d14cdd"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_610102b60fea1455310ccd299d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4542dd2f38a61354a040ba9fd5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_56b91d98f71e3d1b649ed6e9f3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e8a5d59f0ac3040395f159507c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_854ce23dfa9a30aa4ddfc6f78f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_57de40bc620f456c7311aa3a1e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fd11aa87698d5a784713b9de97"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e9f62f5dcb8a54b84234c9e7a0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_50762206f116cd47d1c3fec396"`);
        await queryRunner.query(`CREATE TYPE "public"."subscription_plan_enum_old" AS ENUM('FREE', 'PRO', 'ULTRA')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "subscriptionPlan" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "subscriptionPlan" TYPE "public"."subscription_plan_enum_old" USING "subscriptionPlan"::"text"::"public"."subscription_plan_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "subscriptionPlan" SET DEFAULT 'FREE'`);
        await queryRunner.query(`DROP TYPE "public"."users_subscriptionplan_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."subscription_plan_enum_old" RENAME TO "subscription_plan_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."user_status_enum_old" AS ENUM('ACTIVE', 'BANNED', 'INACTIVE', 'SUSPENDED')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "status" TYPE "public"."user_status_enum_old" USING "status"::"text"::"public"."user_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "status" SET DEFAULT 'ACTIVE'`);
        await queryRunner.query(`DROP TYPE "public"."users_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."user_status_enum_old" RENAME TO "user_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."user_role_enum_old" AS ENUM('ADMIN', 'MODERATOR', 'USER')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."user_role_enum_old" USING "role"::"text"::"public"."user_role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" SET DEFAULT 'USER'`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum_old" RENAME TO "user_role_enum"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "currency"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "currency" character varying(3) NOT NULL DEFAULT 'USD'`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "billingCycle" DROP DEFAULT`);
        await queryRunner.query(`CREATE TYPE "public"."billing_cycle_enum_old" AS ENUM('MONTHLY', 'QUARTERLY', 'YEARLY')`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "billingCycle" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "billingCycle" TYPE "public"."billing_cycle_enum_old" USING "billingCycle"::"text"::"public"."billing_cycle_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."subscriptions_billingcycle_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."billing_cycle_enum_old" RENAME TO "billing_cycle_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."subscription_status_enum_old" AS ENUM('ACTIVE', 'CANCELLED', 'EXPIRED', 'PENDING', 'SUSPENDED', 'TRIALING')`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "status" TYPE "public"."subscription_status_enum_old" USING "status"::"text"::"public"."subscription_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."subscriptions_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."subscription_status_enum_old" RENAME TO "subscription_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."subscription_plan_enum_old" AS ENUM('FREE', 'PRO', 'ULTRA')`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ALTER COLUMN "plan" TYPE "public"."subscription_plan_enum_old" USING "plan"::"text"::"public"."subscription_plan_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."subscriptions_plan_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."subscription_plan_enum_old" RENAME TO "subscription_plan_enum"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP CONSTRAINT "UQ_fbdba4e2ac694cf8c9cecf4dc84"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "currency"`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "currency" character varying(3) NOT NULL DEFAULT 'USD'`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "method" SET NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."payment_method_enum_old" AS ENUM('BANK_TRANSFER', 'CARD', 'MOBILE_MONEY', 'QR', 'USSD')`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "method" TYPE "public"."payment_method_enum_old" USING "method"::"text"::"public"."payment_method_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."payments_method_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."payment_method_enum_old" RENAME TO "payment_method_enum"`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`CREATE TYPE "public"."payment_type_enum_old" AS ENUM('DOWNGRADE', 'ONE_TIME', 'RENEWAL', 'SUBSCRIPTION', 'UPGRADE')`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "type" TYPE "public"."payment_type_enum_old" USING "type"::"text"::"public"."payment_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."payments_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."payment_type_enum_old" RENAME TO "payment_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."payment_status_enum_old" AS ENUM('CANCELLED', 'FAILED', 'PARTIALLY_REFUNDED', 'PENDING', 'REFUNDED', 'SUCCESS')`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "status" TYPE "public"."payment_status_enum_old" USING "status"::"text"::"public"."payment_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "payments" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."payments_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."payment_status_enum_old" RENAME TO "payment_status_enum"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "tokens"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD "tokens" jsonb`);
        await queryRunner.query(`CREATE TYPE "public"."chat_message_role_enum_old" AS ENUM('ASSISTANT', 'SYSTEM', 'TOOL', 'USER')`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ALTER COLUMN "role" TYPE "public"."chat_message_role_enum_old" USING "role"::"text"::"public"."chat_message_role_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."chat_messages_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."chat_message_role_enum_old" RENAME TO "chat_message_role_enum"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "reasoning"`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "reasoning" jsonb`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "stake" TYPE numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "odds" TYPE numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "confidence"`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "confidence" integer`);
        await queryRunner.query(`CREATE TYPE "public"."prediction_status_enum_old" AS ENUM('CORRECT', 'INCORRECT', 'PENDING', 'PUSH', 'VOID')`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "status" TYPE "public"."prediction_status_enum_old" USING "status"::"text"::"public"."prediction_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."predictions_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."prediction_status_enum_old" RENAME TO "prediction_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."prediction_outcome_enum_old" AS ENUM('AWAY_WIN', 'CUSTOM', 'DRAW', 'EVEN', 'HOME_WIN', 'NO', 'ODD', 'OVER', 'UNDER', 'YES')`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "outcome" TYPE "public"."prediction_outcome_enum_old" USING "outcome"::"text"::"public"."prediction_outcome_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."predictions_outcome_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."prediction_outcome_enum_old" RENAME TO "prediction_outcome_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."prediction_type_enum_old" AS ENUM('BOTH_TEAMS_SCORE', 'CARDS', 'CLEAN_SHEET', 'CORNERS', 'CORRECT_SCORE', 'DOUBLE_CHANCE', 'DRAW_NO_BET', 'FIRST_GOAL_SCORER', 'GOALS_ODD_EVEN', 'HALF_TIME_RESULT', 'HANDICAP', 'MATCH_WINNER', 'OVER_UNDER', 'TEAM_TOTAL_GOALS', 'TOTAL_GOALS', 'WIN_TO_NIL')`);
        await queryRunner.query(`ALTER TABLE "predictions" ALTER COLUMN "type" TYPE "public"."prediction_type_enum_old" USING "type"::"text"::"public"."prediction_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."predictions_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."prediction_type_enum_old" RENAME TO "prediction_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."batch_status_enum_old" AS ENUM('CANCELLED', 'COMPLETED', 'FAILED', 'PENDING', 'PROCESSING')`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ALTER COLUMN "status" TYPE "public"."batch_status_enum_old" USING "status"::"text"::"public"."batch_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."prediction_batches_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."batch_status_enum_old" RENAME TO "batch_status_enum"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "description" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "name" character varying(100)`);
        await queryRunner.query(`CREATE TYPE "public"."match_result_enum_old" AS ENUM('AWAY_WIN', 'DRAW', 'HOME_WIN', 'PENDING')`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "result" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "result" TYPE "public"."match_result_enum_old" USING "result"::"text"::"public"."match_result_enum_old"`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "result" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."matches_result_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."match_result_enum_old" RENAME TO "match_result_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."match_status_enum_old" AS ENUM('ABANDONED', 'CANCELLED', 'FINISHED', 'HALFTIME', 'LIVE', 'POSTPONED', 'SCHEDULED', 'SUSPENDED')`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "status" TYPE "public"."match_status_enum_old" USING "status"::"text"::"public"."match_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "matches" ALTER COLUMN "status" SET DEFAULT 'SCHEDULED'`);
        await queryRunner.query(`DROP TYPE "public"."matches_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."match_status_enum_old" RENAME TO "match_status_enum"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP COLUMN "detail"`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD "detail" character varying(200)`);
        await queryRunner.query(`ALTER TABLE "match_events" ALTER COLUMN "isHome" DROP DEFAULT`);
        await queryRunner.query(`CREATE TYPE "public"."match_event_type_enum_old" AS ENUM('CORNER', 'EXTRA_TIME', 'FOUL', 'FREE_KICK', 'FULLTIME', 'GOAL', 'HALFTIME', 'INJURY', 'KICKOFF', 'MISSED_PENALTY', 'OFFSIDE', 'OWN_GOAL', 'PENALTY_GOAL', 'PENALTY_SHOOTOUT', 'RED_CARD', 'SUBSTITUTION', 'VAR', 'YELLOW_CARD')`);
        await queryRunner.query(`ALTER TABLE "match_events" ALTER COLUMN "type" TYPE "public"."match_event_type_enum_old" USING "type"::"text"::"public"."match_event_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."match_events_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."match_event_type_enum_old" RENAME TO "match_event_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."league_type_enum_old" AS ENUM('CUP', 'FRIENDLY', 'LEAGUE', 'PLAYOFFS', 'QUALIFICATION')`);
        await queryRunner.query(`ALTER TABLE "leagues" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "leagues" ALTER COLUMN "type" TYPE "public"."league_type_enum_old" USING "type"::"text"::"public"."league_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "leagues" ALTER COLUMN "type" SET DEFAULT 'LEAGUE'`);
        await queryRunner.query(`DROP TYPE "public"."leagues_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."league_type_enum_old" RENAME TO "league_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."refresh_token_status_enum_old" AS ENUM('ACTIVE', 'EXPIRED', 'REVOKED', 'USED')`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ALTER COLUMN "status" TYPE "public"."refresh_token_status_enum_old" USING "status"::"text"::"public"."refresh_token_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ALTER COLUMN "status" SET DEFAULT 'ACTIVE'`);
        await queryRunner.query(`DROP TYPE "public"."refresh_tokens_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."refresh_token_status_enum_old" RENAME TO "refresh_token_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."device_status_enum_old" AS ENUM('BLOCKED', 'TRUSTED', 'UNTRUSTED')`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" TYPE "public"."device_status_enum_old" USING "status"::"text"::"public"."device_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "status" SET DEFAULT 'UNTRUSTED'`);
        await queryRunner.query(`DROP TYPE "public"."devices_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."device_status_enum_old" RENAME TO "device_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."device_type_enum_old" AS ENUM('DESKTOP', 'MOBILE', 'OTHER', 'TABLET')`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "type" TYPE "public"."device_type_enum_old" USING "type"::"text"::"public"."device_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "devices" ALTER COLUMN "type" SET DEFAULT 'OTHER'`);
        await queryRunner.query(`DROP TYPE "public"."devices_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."device_type_enum_old" RENAME TO "device_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."session_status_enum_old" AS ENUM('ACTIVE', 'EXPIRED', 'REVOKED')`);
        await queryRunner.query(`ALTER TABLE "sessions" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "sessions" ALTER COLUMN "status" TYPE "public"."session_status_enum_old" USING "status"::"text"::"public"."session_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "sessions" ALTER COLUMN "status" SET DEFAULT 'ACTIVE'`);
        await queryRunner.query(`DROP TYPE "public"."sessions_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."session_status_enum_old" RENAME TO "session_status_enum"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "usage"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "features"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "cancellationReason"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "lastFailedPaymentAt"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "lastPaymentAt"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "failedPaymentAttempts"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "paystackPlanId"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "paystackCustomerId"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "paystackSubscriptionId"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "currentPeriodEnd"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "currentPeriodStart"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "nextBillingAt"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "trialEndsAt"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" DROP COLUMN "expiresAt"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "paystackData"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "refundedAmount"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "failedAt"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "userAgent"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "ipAddress"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "netAmount"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "fees"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP CONSTRAINT "UQ_e2c642756a34c2ec569f1b44631"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "paystackReference"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "summary"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "tags"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "estimatedCost"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "tokensUsed"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "isPinned"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "systemPrompt"`);
        await queryRunner.query(`ALTER TABLE "conversations" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "originalContent"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "editedAt"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "isEdited"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "context"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "intent"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "entities"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "responseTime"`);
        await queryRunner.query(`ALTER TABLE "chat_messages" DROP COLUMN "cost"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "isCorrect"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "actualResult"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "resolvedAt"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "contextData"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "details"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "scenario"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "actualWin"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "potentialWin"`);
        await queryRunner.query(`ALTER TABLE "predictions" DROP COLUMN "actualOutcome"`);
        await queryRunner.query(`DROP TYPE "public"."predictions_actualoutcome_enum"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "summary"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "progress"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "errorMessage"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "estimatedCompletionAt"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "completedAt"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "startedAt"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "averageConfidence"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "failedPredictions"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "successfulPredictions"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "processedMatches"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "totalMatches"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "scenario"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "predictionTypes"`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" DROP COLUMN "filters"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP COLUMN "apiEventId"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP COLUMN "playerIn"`);
        await queryRunner.query(`ALTER TABLE "match_events" DROP COLUMN "playerOut"`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "externalId" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD CONSTRAINT "UQ_subscriptions_externalId" UNIQUE ("externalId")`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "paymentMethodId" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "nextBillingDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "trialEnds" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "pausedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD "endDate" TIMESTAMP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "refundAmount" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "gatewayResponse" jsonb`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "externalReference" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "reference" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "payments" ADD CONSTRAINT "UQ_payments_reference" UNIQUE ("reference")`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "userId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD "context" jsonb`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "settledAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "aiAnalysis" jsonb`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "actualPayout" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "potentialPayout" numeric(10,2)`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD "value" character varying(100)`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "settledAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "processedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "isProcessed" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "correctPredictions" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "totalOdds" numeric(10,2) NOT NULL DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "totalActualPayout" numeric(10,2) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "totalPotentialPayout" numeric(10,2) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD "totalStake" numeric(10,2) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD "comments" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "seasons" ADD CONSTRAINT "UQ_seasons_league_year" UNIQUE ("leagueId", "year")`);
        await queryRunner.query(`CREATE INDEX "IDX_users_username" ON "users" ("username") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_email" ON "users" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_subscriptions_endDate" ON "subscriptions" ("endDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_subscriptions_status" ON "subscriptions" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_subscriptions_userId" ON "subscriptions" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_payments_reference" ON "payments" ("reference") `);
        await queryRunner.query(`CREATE INDEX "IDX_payments_status" ON "payments" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_payments_subscriptionId" ON "payments" ("subscriptionId") `);
        await queryRunner.query(`CREATE INDEX "IDX_payments_userId" ON "payments" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_conversations_isActive" ON "conversations" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_conversations_userId" ON "conversations" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_chat_messages_role" ON "chat_messages" ("role") `);
        await queryRunner.query(`CREATE INDEX "IDX_chat_messages_conversationId" ON "chat_messages" ("conversationId") `);
        await queryRunner.query(`CREATE INDEX "IDX_predictions_type" ON "predictions" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_predictions_status" ON "predictions" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_predictions_batchId" ON "predictions" ("batchId") `);
        await queryRunner.query(`CREATE INDEX "IDX_predictions_matchId" ON "predictions" ("matchId") `);
        await queryRunner.query(`CREATE INDEX "IDX_predictions_userId" ON "predictions" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_prediction_batches_status" ON "prediction_batches" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_prediction_batches_userId" ON "prediction_batches" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_startTime_status" ON "matches" ("startTime", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_status" ON "matches" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_startTime" ON "matches" ("startTime") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_awayTeamId" ON "matches" ("awayTeamId") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_homeTeamId" ON "matches" ("homeTeamId") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_seasonId" ON "matches" ("seasonId") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_leagueId" ON "matches" ("leagueId") `);
        await queryRunner.query(`CREATE INDEX "IDX_matches_apiId" ON "matches" ("apiId") `);
        await queryRunner.query(`CREATE INDEX "IDX_match_events_minute" ON "match_events" ("minute") `);
        await queryRunner.query(`CREATE INDEX "IDX_match_events_type" ON "match_events" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_match_events_teamId" ON "match_events" ("teamId") `);
        await queryRunner.query(`CREATE INDEX "IDX_match_events_matchId" ON "match_events" ("matchId") `);
        await queryRunner.query(`CREATE INDEX "IDX_leagues_country" ON "leagues" ("country") `);
        await queryRunner.query(`CREATE INDEX "IDX_leagues_sportId" ON "leagues" ("sportId") `);
        await queryRunner.query(`CREATE INDEX "IDX_teams_country" ON "teams" ("country") `);
        await queryRunner.query(`CREATE INDEX "IDX_teams_leagueId" ON "teams" ("leagueId") `);
        await queryRunner.query(`CREATE INDEX "IDX_teams_apiId" ON "teams" ("apiId") `);
        await queryRunner.query(`CREATE INDEX "IDX_seasons_year" ON "seasons" ("year") `);
        await queryRunner.query(`CREATE INDEX "IDX_seasons_leagueId" ON "seasons" ("leagueId") `);
        await queryRunner.query(`CREATE INDEX "IDX_sports_slug" ON "sports" ("slug") `);
        await queryRunner.query(`CREATE INDEX "IDX_sports_apiId" ON "sports" ("apiId") `);
        await queryRunner.query(`CREATE INDEX "IDX_refresh_tokens_expiresAt" ON "refresh_tokens" ("expiresAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_refresh_tokens_userId" ON "refresh_tokens" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_devices_fingerprint" ON "devices" ("fingerprint") `);
        await queryRunner.query(`CREATE INDEX "IDX_devices_userId" ON "devices" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_sessions_expiresAt" ON "sessions" ("expiresAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_sessions_deviceId" ON "sessions" ("deviceId") `);
        await queryRunner.query(`CREATE INDEX "IDX_sessions_userId" ON "sessions" ("userId") `);
        await queryRunner.query(`ALTER TABLE "subscriptions" ADD CONSTRAINT "FK_subscriptions_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payments" ADD CONSTRAINT "FK_payments_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payments" ADD CONSTRAINT "FK_payments_subscriptionId" FOREIGN KEY ("subscriptionId") REFERENCES "subscriptions"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "conversations" ADD CONSTRAINT "FK_conversations_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chat_messages" ADD CONSTRAINT "FK_chat_messages_conversationId" FOREIGN KEY ("conversationId") REFERENCES "conversations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD CONSTRAINT "FK_predictions_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD CONSTRAINT "FK_predictions_matchId" FOREIGN KEY ("matchId") REFERENCES "matches"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "predictions" ADD CONSTRAINT "FK_predictions_batchId" FOREIGN KEY ("batchId") REFERENCES "prediction_batches"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "prediction_batches" ADD CONSTRAINT "FK_prediction_batches_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_matches_leagueId" FOREIGN KEY ("leagueId") REFERENCES "leagues"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_matches_seasonId" FOREIGN KEY ("seasonId") REFERENCES "seasons"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_matches_homeTeamId" FOREIGN KEY ("homeTeamId") REFERENCES "teams"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "matches" ADD CONSTRAINT "FK_matches_awayTeamId" FOREIGN KEY ("awayTeamId") REFERENCES "teams"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD CONSTRAINT "FK_match_events_matchId" FOREIGN KEY ("matchId") REFERENCES "matches"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "match_events" ADD CONSTRAINT "FK_match_events_teamId" FOREIGN KEY ("teamId") REFERENCES "teams"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "leagues" ADD CONSTRAINT "FK_leagues_sportId" FOREIGN KEY ("sportId") REFERENCES "sports"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "FK_teams_leagueId" FOREIGN KEY ("leagueId") REFERENCES "leagues"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "seasons" ADD CONSTRAINT "FK_seasons_leagueId" FOREIGN KEY ("leagueId") REFERENCES "leagues"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ADD CONSTRAINT "FK_refresh_tokens_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "devices" ADD CONSTRAINT "FK_devices_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sessions" ADD CONSTRAINT "FK_sessions_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sessions" ADD CONSTRAINT "FK_sessions_deviceId" FOREIGN KEY ("deviceId") REFERENCES "devices"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
